# -*- coding: utf-8 -*-
"""Heart disease prediction using Streamlit-checkpoint.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Zqk0eCJT4LBZLa-yafbiL9USGHhTOi_T
"""

import pandas as pd
data=pd.read_csv('heart.csv')

data

data.shape

data.isnull().sum()

#dataset is clean and has no missing values

data['target'].value_counts()

"""### dataset is balanced"""

data.info()

#All data are numerical

#We will test some classification algorithms: Logistic regression, svm, stochastic gradient descent , decision tree, random forest.

from sklearn.linear_model import LogisticRegression
from sklearn.metrics import accuracy_score
from sklearn.model_selection import train_test_split
from sklearn import svm
from sklearn.linear_model import SGDClassifier
from sklearn import tree
from sklearn.ensemble import RandomForestClassifier

y = data['target']

X = data.drop('target',axis=1)
X_train,X_test,y_train,y_test = train_test_split(X,y,test_size=0.3,random_state=0)
LR_classifier = LogisticRegression(random_state=0)
clf = svm.SVC()
sgd=SGDClassifier()
forest=RandomForestClassifier()
treee = tree.DecisionTreeClassifier()
LR_classifier.fit(X_train, y_train)
clf.fit(X_train, y_train)
sgd.fit(X_train, y_train)
treee.fit(X_train, y_train)
forest.fit(X_train, y_train)

y_pred=LR_classifier.predict(X_train)
y_predsvm=clf.predict(X_train)
y_predsgd=sgd.predict(X_train)
y_predtree=treee.predict(X_train)
y_predforest=forest.predict(X_train)

print(accuracy_score(y_train, y_pred))
print(accuracy_score(y_train, y_predsvm))
print(accuracy_score(y_train, y_predsgd))
print(accuracy_score(y_train, y_predtree))
print(accuracy_score(y_train, y_predforest))

y_pred=LR_classifier.predict(X_test)
y_predsvm=clf.predict(X_test)
y_predsgd=sgd.predict(X_test)
y_predtree=treee.predict(X_test)
y_predforest=forest.predict(X_test)

print(accuracy_score(y_test, y_pred))
print(accuracy_score(y_test, y_predsvm))
print(accuracy_score(y_test, y_predsgd))
print(accuracy_score(y_test, y_predtree))
print(accuracy_score(y_test, y_predforest))

accuracy_score(y_test, y_predsvm)

accuracy_score(y_test, y_predsgd)

accuracy_score(y_test, y_predtree)

accuracy_score(y_test, y_predforest)

import pickle
pickle.dump(clf, open('penguins_clf.pkl', 'wb'))